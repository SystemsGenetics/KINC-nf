manifest {
    mainScript = "main.nf"
    defaultBranch = "master"
    nextflowVersion = ">=21.04"
}



params {
    input_dir = "input"
    emx_txt_files = "*.emx.txt"
    emx_files = "*.emx"
    ccm_files = "*.ccm"
    cmx_files = "*.cmx"
    amx_files = "*.annotations.txt"

    output_dir = "output"

    import_emx = true

    //
    // Refer to kinc command line usage for information
    // on these parameters.
    //
    // For GPU runs on desktop or k8s, set hardware_type
    // to "gpu". For GPU runs on Palmetto, set hardware_type
    // to the desired gpu model, such as "p100" or "v100".
    //
    similarity = true
    similarity_chunkrun = true
    similarity_chunks = 4
    similarity_hardware_type = "cpu"
    similarity_threads = 1
    similarity_clusmethod = "gmm"
    similarity_corrmethod = "spearman"
    similarity_minexpr = 0
    similarity_minsamp = 25
    similarity_minclus = 1
    similarity_maxclus = 5
    similarity_criterion = "ICL"
    similarity_preout = true
    similarity_postout = true
    similarity_mincorr = 0
    similarity_maxcorr = 1
    similarity_bsize = 0
    similarity_gsize = 4096
    similarity_lsize = 32

    export_cmx = false

    corrpower = true
    corrpower_chunks = 4
    corrpower_alpha = 0.001
    corrpower_power = 0.8

    condtest = true
    condtest_chunks = 4
    condtest_feat_tests = ""
    condtest_feat_types = ""
    condtest_alpha = 0.001
    condtest_power = 0.8

    extract = true
    extract_format = "tidy"
    extract_mincorr = 0
    extract_maxcorr = 1
    extract_filter_pvalue = 0.001
    extract_filter_rsquare = 0.3
}



report {
    enabled = true
    file = "${params.output_dir}/reports/report.html"
}



timeline {
    enabled = true
    file = "${params.output_dir}/reports/timeline.html"
}



trace {
    enabled = true
    fields = "task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes,vol_ctxt,inv_ctxt,workdir,scratch,error_action"
    file = "${params.output_dir}/reports/trace.txt"
    raw = true
}



docker {
    runOptions = "--init --gpus all"
}



singularity {
    runOptions = "--nv --bind \${TMPDIR}"
    autoMounts = true
}



process {
    container = "systemsgenetics/kinc:3.4.2-cpu"
    errorStrategy = "ignore"

    withLabel:gpu {
        container = (params.similarity_hardware_type == "cpu")
            ? "systemsgenetics/kinc:3.4.2-cpu"
            : "systemsgenetics/kinc:3.4.2-gpu"

        if ( params.similarity_hardware_type != "cpu" ) {
            accelerator = 1
        }
    }
}



profiles {
    docker {
        docker.enabled = true
    }

    example {
        params.input_dir = "${projectDir}/example"
        params.emx_txt_files = "*.GEM.log2.txt"
        params.condtest_feat_tests = "Subspecies,Treatment,GTAbbr,Duration"
        params.condtest_feat_types = "Duration:quantitative"
    }

    modules {
        process {
            module = "kinc/v3.4.2"
        }
    }

    google {
        process {
            executor = "google-lifesciences"
            errorStrategy = { task.exitStatus==14 ? "retry" : "ignore" }
            maxRetries = 5

            cpus = 2
            memory = 8.GB

            withLabel:gpu {
                if ( params.similarity_hardware_type != "cpu" ) {
                    accelerator = [request: 1, type: params.similarity_hardware_type]
                }
            }
        }
        google {
            zone = "us-central1-c"

            lifeSciences.bootDiskSize = 20.GB
            lifeSciences.debug = false
            lifeSciences.preemptible = true
            lifeSciences.sshDaemon = false
        }

        workDir = "gs://nextflow-data/work"
    }

    palmetto {
        process {
            executor = "pbspro"
            time = 24.h
            clusterOptions = "-l select=1:mem=14gb:ncpus=2"

            // Due to a Palmetto scheduling bug, ncpus must greater
            // than 1 and interconnect must be specified in order to
            // prevent jobs from landing on a c1 phase.
            withName:similarity_chunk {
                clusterOptions = (params.similarity_hardware_type == "cpu")
                    ? "-l select=1:mem=14gb:ncpus=2:interconnect=fdr"
                    : "-l select=1:mem=14gb:ncpus=${params.similarity_threads}:ngpus=1:gpu_model=${params.similarity_hardware_type}"
            }
            withName:similarity_mpi {
                clusterOptions = (params.similarity_hardware_type == "cpu")
                    ? "-l select=${params.similarity_chunks}:mem=14gb:ncpus=2:interconnect=fdr"
                    : "-l select=${params.similarity_chunks}:mem=14gb:ncpus=${params.similarity_threads}:ngpus=1:gpu_model=${params.similarity_hardware_type}"
            }
            withName:corrpower {
                clusterOptions = "-l select=${params.corrpower_chunks}:mem=8gb:ncpus=2:interconnect=fdr"
            }
            withName:condtest {
                clusterOptions = "-l select=${params.corrpower_chunks}:mem=8gb:ncpus=2:interconnect=fdr"
            }
        }
        executor {
            queueSize = 50
        }
    }

    singularity {
        singularity.enabled = true
    }

    standard {
        process {
            memory = 14.GB

            withName:similarity_chunk {
                cpus = (params.similarity_hardware_type == "cpu")
                    ? 1
                    : params.similarity_threads
            }
            withName:similarity_mpi {
                cpus = (params.similarity_hardware_type == "cpu")
                    ? params.similarity_chunks
                    : params.similarity_chunks * params.similarity_threads
            }
            withName:corrpower {
                cpus = params.corrpower_chunks
            }
            withName:condtest {
                cpus = params.condtest_chunks
            }
        }
    }

    testing {
        process.errorStrategy = "terminate"
    }
}
