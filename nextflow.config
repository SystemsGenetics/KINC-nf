manifest {
    mainScript = "main.nf"
    defaultBranch = "master"
    nextflowVersion = ">=20.07.0"
}

params {
    input {
        dir = "input"
        emx_txt_files = "*.emx.txt"
        emx_files = "*.emx"
        ccm_files = "*.ccm"
        cmx_files = "*.cmx"
        amx_files = "*.annotations.txt"
    }

    output {
        dir = "output"
    }

    import_emx {
        enabled = true
    }

    //
    // Refer to kinc command line usage for information
    // on these parameters.
    //
    // For GPU runs on desktop or k8s, set hardware_type
    // to "gpu". For GPU runs on Palmetto, set hardware_type
    // to the desired gpu model, such as "p100" or "v100".
    //
    similarity {
        enabled = true
        chunkrun = true
        chunks = 4
        hardware_type = "cpu"
        threads = 1
        clus_method = "gmm"
        corr_method = "spearman"
        min_expr = 0
        min_samp = 25
        min_clus = 1
        max_clus = 5
        criterion = "ICL"
        preout = true
        postout = true
        min_corr = 0
        max_corr = 1
        bsize = 0
        gsize = 4096
        lsize = 32
    }

    export_cmx {
        enabled = false
    }

    corrpower {
        enabled = true
        chunks = 4
        alpha = 0.001
        power = 0.8
    }

    cond_test {
        enabled = true
        chunks = 4
        feat_tests = ""
        feat_types = ""
        alpha = 0.001
        power = 0.8
    }

    extract {
        enabled = true
        format = "tidy"
        min_corr = 0
        max_corr = 1
        filter_pvalue = 0.001
        filter_rsquare = 0.3
    }
}



report {
    enabled = true
    file = "${params.output.dir}/reports/report.html"
}



timeline {
    enabled = true
    file = "${params.output.dir}/reports/timeline.html"
}



trace {
    enabled = true
    fields = "task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes,vol_ctxt,inv_ctxt,workdir,scratch,error_action"
    file = "${params.output.dir}/reports/trace.txt"
    raw = true
}



docker {
    runOptions = "--init --gpus all"
}



singularity {
    runOptions = "--bind \${TMPDIR} --nv"
    autoMounts = true
}



process {
    container = "systemsgenetics/kinc:3.4.2-cpu"
    errorStrategy = { task.attempt <= 2 ? "retry" : "ignore" }
    scratch = false

    withLabel:gpu {
        container = { params.similarity.hardware_type == "cpu" ? "systemsgenetics/kinc:3.4.2-cpu" : "systemsgenetics/kinc:3.4.2-gpu" }
        accelerator = { params.similarity.hardware_type == "cpu" ? 0 : 1 }
    }
}



profiles {
    example {
        params.input.emx_txt_files = "*.GEM.log2.txt"
        params.cond_test.feat_tests = "Subspecies,Treatment,GTAbbr,Duration"
        params.cond_test.feat_types = "Duration:quantitative"
    }

    modules {
        process {
            module = "kinc/v3.4.2"

            withLabel:python {
                module = "anaconda3/5.1.0-gcc/8.3.1"
            }
        }
    }

    pbs {
        process {
            executor = "pbspro"
            time = "12h"
            clusterOptions = "-l select=1:mem=8gb:ncpus=2:interconnect=any:phase=10"

            withName:similarity_chunk {
                time = "24h"
                clusterOptions = {
                    params.similarity.hardware_type == "cpu"
                    ? "-l select=1:mem=8gb:ncpus=2:interconnect=any:phase=10"
                    : "-l select=1:mem=8gb:ncpus=${params.similarity.threads}:ngpus=1:gpu_model=${params.similarity.hardware_type}:interconnect=any"
                }
            }
            withName:similarity_mpi {
                time = "24h"
                clusterOptions = {
                    params.similarity.hardware_type == "cpu"
                    ? "-l select=${params.similarity.chunks + 1}:ncpus=1:mem=8gb:interconnect=any:phase=10"
                    : "-l select=${params.similarity.chunks + 1}:ncpus=${params.similarity.threads}:mem=8gb:ngpus=1:gpu_model=${params.similarity.hardware_type}:interconnect=any"
                }
            }
            withName:corrpower {
                clusterOptions = "-l select=${params.corrpower.chunks + 1}:mem=8gb:ncpus=1:interconnect=any:phase=10"
            }
            withName:cond_test {
                clusterOptions = "-l select=${params.corrpower.chunks + 1}:mem=8gb:ncpus=1:interconnect=any:phase=10"
            }
        }
        executor {
            queueSize = 50
        }
    }

    standard {
        process {
            withName:similarity_chunk {
                cpus = {
                    params.similarity.hardware_type == "cpu"
                    ? 1
                    : "${params.similarity.threads}"
                }
                memory = 8.GB
            }
            withName:similarity_mpi {
                cpus = {
                    params.similarity.hardware_type == "cpu"
                    ? "${params.similarity.chunks}"
                    : "${params.similarity.chunks * params.similarity.threads}"
                }
                memory = 8.GB
            }
            withName:corrpower {
                cpus = "${params.corrpower.chunks}"
                memory = 8.GB
            }
            withName:cond_test {
                cpus = "${params.cond_test.chunks}"
                memory = 8.GB
            }
        }
    }

    testing {
        process.errorStrategy = "terminate"
    }
}
