/*
========================================================================================
    Config file for defining DSL2 per module options and publishing paths
========================================================================================
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
    def graph_id = params.graph_id
    if (!graph_id) {
        graph_id = params.graph_name
        graph_id = graph_id.replaceAll(/[^\w\.\-]/, '_')
    }

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: 'copy',
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: KINC_IMPORTEMX {
        ext.args = "" +
            "--nan \"${params.data_missing_val}\" " +
            "--samples ${params.data_num_samples} "+
            "--contains-row-id ${params.data_has_row_ids}"

        ext.prefix = "${graph_id}"
    }

    withName: KINC_SIMILARITY_CHUNK {
        def minexpr = params.similarity_minexpr
        if (!params.similarity_minexpr) {
            minexpr = '-inf'
        }
        ext.args = "" +
            "--clusmethod \"${params.similarity_clusmethod}\" " +
            "--corrmethod \"${params.similarity_corrmethod}\" " +
            "--minexpr $minexpr " +
            "--minsamp ${params.similarity_minsamp} " +
            "--minclus ${params.similarity_minclus} " +
            "--maxclus ${params.similarity_maxclus} " +
            "--crit \"${params.similarity_criterion}\" " +
            "--preout ${params.similarity_preout} " +
            "--postout ${params.similarity_postout} " +
            "--mincorr ${params.similarity_mincorr} " +
            "--maxcorr ${params.similarity_maxcorr} " +
            "--bsize ${params.similarity_bsize} " +
            "--gsize ${params.similarity_gsize} " +
            "--lsize ${params.similarity_lsize}"

        ext.prefix = "${graph_id}"
    }

    withName: KINC_SIMILARITY_MERGE {
        def minexpr = params.similarity_minexpr
        if (!params.similarity_minexpr) {
            minexpr = '-inf'
        }
        ext.args = "" +
            "--clusmethod \"${params.similarity_clusmethod}\" " +
            "--corrmethod \"${params.similarity_corrmethod}\" " +
            "--minexpr $minexpr " +
            "--minsamp ${params.similarity_minsamp} " +
            "--minclus ${params.similarity_minclus} " +
            "--maxclus ${params.similarity_maxclus} " +
            "--crit \"${params.similarity_criterion}\" " +
            "--preout ${params.similarity_preout} " +
            "--postout ${params.similarity_postout} " +
            "--mincorr ${params.similarity_mincorr} " +
            "--maxcorr ${params.similarity_maxcorr} " +
            "--bsize ${params.similarity_bsize} " +
            "--gsize ${params.similarity_gsize} " +
            "--lsize ${params.similarity_lsize}"

        ext.prefix = "${graph_id}"
    }

    withName: KINC_CORRPOWER {
        ext.args = "" +
            "--alpha ${params.corrpower_alpha} " +
            "--power ${params.corrpower_power}"

        ext.prefix = "${graph_id}"
    }

    withName: KINC_CONDTEST {
        ext.args = "" +
            "--delim ${params.condtest_delim} " +
            "--nan \"${params.condtest_nan}\" " +
            "--feat-tests \"${params.condtest_tests}\" " +
            "--feat-types \"${params.condtest_types}\" " +
            "--alpha ${params.condtest_alpha} " +
            "--power ${params.condtest_power} "

        ext.prefix = "${graph_id}"
    }


    withName: KINC_EXTRACT {
        ext.args = "" +
            "--format \"${params.extract_format}\" " +
            "--mincorr ${params.extract_mincorr} " +
            "--maxcorr ${params.extract_maxcorr} " +
            "--filter-pvalue ${params.extract_pvalue} " +
            "--filter-rsquare ${params.extract_rsquare} "

        ext.prefix = "${graph_id}"
    }

    withName: KINC_FILTERBIAS {
        ext.args = "" +
            "--mtt_th ${params.filterbias_mtt_th} " +
            "--wa_th ${params.filterbias_wa_th} " +
            "--wa_base \"${params.filterbias_wa_base}\" " +
            "--chunk_size ${params.filterbias_split_size} "

        ext.prefix = "${graph_id}"
    }

    withName: KINC_MAKEPLOTS {
        ext.args = ""
        ext.prefix = "${graph_id}"
    }

    withName: "SYSTEMSGENETICS_KINC:KINC:KINC_FILTERRANK_.*" {
        ext.args = " --save_condition_networks"
        if (params.filterrank_top_n) {
            ext.args += " --top_n ${params.filterrank_top_n}"
        }
        if (params.filterrank_score_weight) {
            ext.args += " --score_weight ${params.filterrank_score_weight}"
        }
        if (params.filterrank_pval_weight) {
            ext.args += " --pval_weight ${params.filterrank_pval_weight}"
        }
        if (params.filterrank_rsqr_weight) {
            ext.args += " --rsqr_weight ${params.filterrank_rsqr_weight}"
        }
        ext.prefix = "${graph_id}"
    }
    withName: "SYSTEMSGENETICS_KINC:KINC:KINC_FILTERRANK_UNIQUE_CLASS" {
        ext.args = " --save_condition_networks --unique_filter \"class\""
    }
    withName: "SYSTEMSGENETICS_KINC:KINC:KINC_FILTERRANK_UNIQUE_LABEL" {
        ext.args = " --save_condition_networks --unique_filter \"label\""
    }

    withName: KINC_NET2GRAPHML {
        ext.args = "" +
           "--graph_name \"${params.graph_name}\" " +
           "--graph_id \"${graph_id}\" " +
           "--directional \"No\" "
        ext.prefix = "${graph_id}"
    }



    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            pattern: '*_versions.yml'
        ]
    }

}
